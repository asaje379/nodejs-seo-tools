// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  IN_PROGRESS
  SUCCESS
  FAILED
}

enum TaskType {
  SUMMARIZER
  EXTRACTOR
  SITEMAP
  KEYWORD
  LIGHTHOUSE
  OBSERVATORY
  INTERNAL_LINKS
  SERP
}

model Task {
  id        String      @id @default(uuid())
  jobId     Int?
  data      Json?
  result    Json?
  type      TaskType
  status    TaskStatus  @default(IN_PROGRESS)
  createdAt DateTime    @default(now())
  startedAt DateTime    @default(now())
  endedAt   DateTime?
  enabled   Boolean     @default(true)
  Ligthouse Ligthouse[]
  Summarizer  Summarizer[]
  Observatory Observatory[]
  Keyword     Keyword[]
  Extractor   Extractor[]
  Sitemap Sitemap[]
  InternalLink InternalLink[]
  Serp Serp[]
}

model Ligthouse {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  enabled   Boolean  @default(true)
  url       String
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    String?
}

model Sitemap {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  enabled   Boolean  @default(true)
  url       String
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    String?
}

model Keyword {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  enabled   Boolean  @default(true)
  text      String
  stopwords String   @default("")
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    String?
}

model Extractor {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  enabled   Boolean  @default(true)
  url       String
  kinds     String
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    String?
}

model Summarizer {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  enabled   Boolean  @default(true)

  url    String?
  text   String?
  task   Task?   @relation(fields: [taskId], references: [id])
  taskId String?
}

model Observatory {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  enabled   Boolean  @default(true)
  url       String
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    String?
}

model InternalLink {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  enabled   Boolean  @default(true)
  url       String
  depth     Int
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    String?
}

model Serp {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  enabled   Boolean  @default(true)
  url       String
  keyword   String
  maxResult Int
  userAgent String
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    String?
}
